{"E:\\Projects\\testTaskNode\\testNodeTask\\register.ts":{"path":"E:\\Projects\\testTaskNode\\testNodeTask\\register.ts","statementMap":{"0":{"start":{"line":1,"column":15},"end":{"line":1,"column":33}},"1":{"start":{"line":2,"column":22},"end":{"line":2,"column":47}},"2":{"start":{"line":3,"column":21},"end":{"line":3,"column":47}},"3":{"start":{"line":4,"column":21},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":12,"column":3}},"5":{"start":{"line":14,"column":0},"end":{"line":18,"column":3}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"100939bf05a0f3842772bd231bb07f9e6a4a3f75","contentHash":"0a97c5e2f77de60d854ee6c84e35e01d751d5532ba77cfb243b4103a707eb08c"},"E:\\Projects\\testTaskNode\\testNodeTask\\src\\methodRouter.controller.ts":{"path":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\methodRouter.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":39}},"3":{"start":{"line":8,"column":4},"end":{"line":15,"column":7}},"4":{"start":{"line":9,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":10,"column":12},"end":{"line":10,"column":67}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":58}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":10}},"8":{"start":{"line":21,"column":16},"end":{"line":43,"column":1}},"9":{"start":{"line":22,"column":19},"end":{"line":22,"column":28}},"10":{"start":{"line":23,"column":28},"end":{"line":23,"column":37}},"11":{"start":{"line":25,"column":4},"end":{"line":42,"column":5}},"12":{"start":{"line":26,"column":8},"end":{"line":38,"column":9}},"13":{"start":{"line":27,"column":12},"end":{"line":27,"column":72}},"14":{"start":{"line":28,"column":12},"end":{"line":33,"column":13}},"15":{"start":{"line":29,"column":16},"end":{"line":29,"column":53}},"16":{"start":{"line":32,"column":16},"end":{"line":32,"column":74}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":50}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":49}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":66}},"20":{"start":{"line":45,"column":17},"end":{"line":62,"column":1}},"21":{"start":{"line":48,"column":28},"end":{"line":48,"column":36}},"22":{"start":{"line":49,"column":4},"end":{"line":60,"column":5}},"23":{"start":{"line":50,"column":8},"end":{"line":56,"column":9}},"24":{"start":{"line":51,"column":12},"end":{"line":51,"column":57}},"25":{"start":{"line":52,"column":12},"end":{"line":52,"column":54}},"26":{"start":{"line":55,"column":12},"end":{"line":55,"column":75}},"27":{"start":{"line":59,"column":8},"end":{"line":59,"column":52}},"28":{"start":{"line":61,"column":4},"end":{"line":61,"column":29}},"29":{"start":{"line":64,"column":18},"end":{"line":91,"column":1}},"30":{"start":{"line":67,"column":19},"end":{"line":67,"column":28}},"31":{"start":{"line":68,"column":28},"end":{"line":68,"column":36}},"32":{"start":{"line":69,"column":17},"end":{"line":69,"column":38}},"33":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"34":{"start":{"line":71,"column":4},"end":{"line":89,"column":5}},"35":{"start":{"line":72,"column":8},"end":{"line":72,"column":55}},"36":{"start":{"line":73,"column":8},"end":{"line":73,"column":35}},"37":{"start":{"line":74,"column":8},"end":{"line":85,"column":9}},"38":{"start":{"line":75,"column":12},"end":{"line":81,"column":13}},"39":{"start":{"line":76,"column":16},"end":{"line":76,"column":54}},"40":{"start":{"line":77,"column":16},"end":{"line":77,"column":59}},"41":{"start":{"line":80,"column":16},"end":{"line":80,"column":79}},"42":{"start":{"line":84,"column":12},"end":{"line":84,"column":71}},"43":{"start":{"line":88,"column":8},"end":{"line":88,"column":66}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":29}},"45":{"start":{"line":93,"column":19},"end":{"line":114,"column":1}},"46":{"start":{"line":95,"column":28},"end":{"line":95,"column":37}},"47":{"start":{"line":96,"column":19},"end":{"line":96,"column":28}},"48":{"start":{"line":97,"column":4},"end":{"line":113,"column":5}},"49":{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},"50":{"start":{"line":99,"column":12},"end":{"line":99,"column":71}},"51":{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},"52":{"start":{"line":101,"column":16},"end":{"line":101,"column":41}},"53":{"start":{"line":104,"column":16},"end":{"line":104,"column":74}},"54":{"start":{"line":108,"column":12},"end":{"line":108,"column":71}},"55":{"start":{"line":112,"column":8},"end":{"line":112,"column":67}},"56":{"start":{"line":115,"column":0},"end":{"line":120,"column":2}}},"fnMap":{"0":{"name":"initial","decl":{"start":{"line":7,"column":15},"end":{"line":7,"column":22}},"loc":{"start":{"line":7,"column":25},"end":{"line":16,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":20},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":34},"end":{"line":15,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":16},"end":{"line":21,"column":17}},"loc":{"start":{"line":21,"column":42},"end":{"line":43,"column":1}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":17},"end":{"line":45,"column":18}},"loc":{"start":{"line":45,"column":43},"end":{"line":62,"column":1}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":64,"column":18},"end":{"line":64,"column":19}},"loc":{"start":{"line":64,"column":44},"end":{"line":91,"column":1}},"line":64},"5":{"name":"(anonymous_5)","decl":{"start":{"line":93,"column":19},"end":{"line":93,"column":20}},"loc":{"start":{"line":93,"column":45},"end":{"line":114,"column":1}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":38,"column":9}},{"start":{"line":26,"column":8},"end":{"line":38,"column":9}}],"line":26},"1":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":29}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":14}},{"start":{"line":26,"column":18},"end":{"line":26,"column":29}}],"line":26},"2":{"loc":{"start":{"line":28,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":33,"column":13}},{"start":{"line":28,"column":12},"end":{"line":33,"column":13}}],"line":28},"3":{"loc":{"start":{"line":50,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":56,"column":9}},{"start":{"line":50,"column":8},"end":{"line":56,"column":9}}],"line":50},"4":{"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":51}},"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":23}},{"start":{"line":50,"column":27},"end":{"line":50,"column":51}}],"line":50},"5":{"loc":{"start":{"line":74,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":85,"column":9}},{"start":{"line":74,"column":8},"end":{"line":85,"column":9}}],"line":74},"6":{"loc":{"start":{"line":75,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":81,"column":13}},{"start":{"line":75,"column":12},"end":{"line":81,"column":13}}],"line":75},"7":{"loc":{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},{"start":{"line":98,"column":8},"end":{"line":109,"column":9}}],"line":98},"8":{"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":29}},"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":23}},{"start":{"line":98,"column":27},"end":{"line":98,"column":29}}],"line":98},"9":{"loc":{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},{"start":{"line":100,"column":12},"end":{"line":105,"column":13}}],"line":100}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":2,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\methodRouter.controller.ts","sources":["E:\\Projects\\testTaskNode\\testNodeTask\\src\\methodRouter.controller.ts"],"names":[],"mappings":"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","sourcesContent":["const connection = require('./db');\r\nimport { Request, Response } from \"express\";\r\nimport { User } from \"./entity/User\";\r\n\r\n//initial function is for find connection with data base and excess with userRepository to change database\r\nlet userRepository;\r\nasync function initial() {\r\n    connection.then(connection => {\r\n        try {\r\n            userRepository = connection.getRepository(User);\r\n        }\r\n        catch (error) {\r\n            console.log(\"database is not connect\", error);\r\n\r\n        }\r\n    });\r\n}\r\ninitial();\r\n//GetMethod for get data from user table with GET /users?id={userId}&phoneNumber={phoneNumber} \r\n// - fetch a user matching the query\r\n// - if no query params are specified, return all\r\nvar GetMethod = async function (req: Request, res: Response) {\r\n\r\n    const { id } = req.query\r\n    const { phoneNumber } = req.query\r\n\r\n    let results;\r\n    try {\r\n        if (id && phoneNumber) {\r\n            results = await userRepository.findOne({ id, phoneNumber });\r\n            if (results) {\r\n                return res.status(201).send(results);\r\n            }\r\n            else {\r\n                return res.status(400).send('invalid id or phone number');\r\n            }\r\n        }\r\n        else {\r\n            results = await userRepository.find();\r\n            return res.status(201).send(results);\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send('invalid id or phone number');\r\n    }\r\n}\r\n\r\n// PostMethod use as ==> POST /users (create a user)\r\nvar PostMethod = async function (req: Request, res: Response) {\r\n    let user;\r\n    let results;\r\n    const { phoneNumber } = req.body\r\n\r\n    try {\r\n        if (phoneNumber && phoneNumber.length == 10) {\r\n            user = await userRepository.create(req.body);\r\n            results = await userRepository.save(user);\r\n        }\r\n        else {\r\n            return res.status(400).send('Phone number should be 10 digit');\r\n\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send('invalid data');\r\n\r\n    }\r\n    return res.send(results);\r\n}\r\n\r\n//PatchMethod use for update data in user table ==>PATCH /users?id={userId}&phoneNumber={phoneNumber}\r\nvar PatchMethod = async function (req: Request, res: Response) {\r\n    let results;\r\n    let users;\r\n    const { id } = req.query\r\n    const { phoneNumber } = req.body\r\n    const data = req.query.phoneNumber\r\n    console.log(\"user\", data);\r\n\r\n    try {\r\n        users = await userRepository.findOne(id, data);\r\n        console.log(\"user\", users);\r\n\r\n        if (users) {\r\n            if (phoneNumber.length == 10) {\r\n                userRepository.merge(users, req.body);\r\n                results = await userRepository.save(users);\r\n            }\r\n            else {\r\n                return res.status(400).send('phone number should be 10 digit');\r\n            }\r\n        }\r\n        else {\r\n            return res.status(400).send('invalid  id or phone number');\r\n        }\r\n    }\r\n    catch (err) {\r\n        return res.status(400).send('invalid id or phone number');\r\n    }\r\n    return res.send(results);\r\n}\r\n\r\n//Delete method use as ==> DELETE /users?id={userId}&phoneNumber={phoneNumber}\r\nvar DeleteMethod = async function (req: Request, res: Response) {\r\n    let results;\r\n    const { phoneNumber } = req.query\r\n    const { id } = req.query\r\n\r\n    try {\r\n        if (phoneNumber && id) {\r\n            results = await userRepository.delete({ id, phoneNumber });\r\n            if (results.affected != 0) {\r\n                return res.send(results);\r\n            }\r\n            else {\r\n                return res.status(400).send('invalid id or phone number');\r\n            }\r\n        }\r\n        else {\r\n            return res.status(400).send('id and phone number require');\r\n\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send('invalid id and phone number');\r\n    }\r\n}\r\nmodule.exports = {\r\n    GetMethod,\r\n    PostMethod,\r\n    PatchMethod,\r\n    DeleteMethod\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"130cd1626c953cefac0b9b12f742502338866577","contentHash":"c24e8c0fd2657c8c583f95dc9215b6556e8cc3730ffe0e0580c34fbd322b9513"},"E:\\Projects\\testTaskNode\\testNodeTask\\src\\db.ts":{"path":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\db.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":19},"end":{"line":22,"column":2}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\db.ts","sources":["E:\\Projects\\testTaskNode\\testNodeTask\\src\\db.ts"],"names":[],"mappings":";;AAAA,qCAA2C;AAC3C,iCAAiC;AACjC,MAAM,UAAU,GAAG,0BAAgB,CAAC;IAChC,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,WAAW;IACjB,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE;QACN,SAAS,GAAG,cAAc;KAC7B;IACD,mBAAmB,EAAE,wBAAwB;IAC7C,UAAU,EAAE,CAAC,gBAAgB,CAAC;IAC9B,GAAG,EAAE;QACD,eAAe,EAAE,WAAW;KAC/B;IACD,WAAW,EAAE,IAAI;IACjB,OAAO,EAAE,KAAK;CACjB,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","sourcesContent":["import { createConnection } from \"typeorm\";\r\n//connection with mysql data base\r\nconst connection = createConnection({\r\n    type: \"mysql\",\r\n    host: \"localhost\",\r\n    port: 3306,\r\n    username: \"root\",\r\n    password: \"\",\r\n    database: \"nodetest\",\r\n    entities: [\r\n        __dirname + \"/entity/*.ts\"\r\n    ],\r\n    migrationsTableName: \"custom_migration_table\",\r\n    migrations: [\"migration/*.js\"],\r\n    cli: {\r\n        \"migrationsDir\": \"migration\"\r\n    },\r\n    synchronize: true,\r\n    logging: false\r\n});\r\n\r\nmodule.exports = connection;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab2856858d3e297228a80c7f254232b5cff7ad3d","contentHash":"af45dd2357a65022bb79e4d96b69d4ce24dbde9a8aa3911ec41105ae7b86477b"},"E:\\Projects\\testTaskNode\\testNodeTask\\src\\entity\\User.ts":{"path":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\entity\\User.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"11":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"12":{"start":{"line":9,"column":79},"end":{"line":9,"column":109}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"14":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"15":{"start":{"line":13,"column":18},"end":{"line":13,"column":36}},"16":{"start":{"line":14,"column":11},"end":{"line":15,"column":1}},"17":{"start":{"line":16,"column":0},"end":{"line":19,"column":33}},"18":{"start":{"line":20,"column":0},"end":{"line":23,"column":40}},"19":{"start":{"line":24,"column":0},"end":{"line":27,"column":39}},"20":{"start":{"line":28,"column":0},"end":{"line":31,"column":34}},"21":{"start":{"line":32,"column":0},"end":{"line":35,"column":42}},"22":{"start":{"line":36,"column":0},"end":{"line":38,"column":9}},"23":{"start":{"line":39,"column":0},"end":{"line":39,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":46},"end":{"line":8,"column":47}},"loc":{"start":{"line":8,"column":62},"end":{"line":10,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":18},"end":{"line":8,"column":22}},{"start":{"line":8,"column":26},"end":{"line":8,"column":41}},{"start":{"line":8,"column":46},"end":{"line":10,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},{"start":{"line":9,"column":4},"end":{"line":9,"column":109}}],"line":9},"12":{"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":77}},"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":77}}],"line":9}},"s":{"0":1,"1":6,"2":6,"3":6,"4":6,"5":0,"6":0,"7":0,"8":0,"9":6,"10":1,"11":5,"12":5,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"f":{"0":6,"1":5},"b":{"0":[1,1,1],"1":[1,5],"2":[0,5],"3":[6,0],"4":[6,6],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[6,5,0],"10":[1,1,1],"11":[5,0],"12":[5,5]},"inputSourceMap":{"version":3,"file":"E:\\Projects\\testTaskNode\\testNodeTask\\src\\entity\\User.ts","sources":["E:\\Projects\\testTaskNode\\testNodeTask\\src\\entity\\User.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAA+D;AAG/D,IAAa,IAAI,GAAjB,MAAa,IAAI;CAiBhB,CAAA;AAdG;IADC,gCAAsB,EAAE;;gCACd;AAGX;IADC,gBAAM,EAAE;;uCACS;AAGlB;IADC,gBAAM,EAAE;;sCACQ;AAGjB;IADC,gBAAM,EAAE;;iCACG;AAGZ;IADC,gBAAM,EAAE;;yCACW;AAfX,IAAI;IADhB,gBAAM,EAAE;GACI,IAAI,CAiBhB;AAjBY,oBAAI","sourcesContent":["import {Entity, PrimaryGeneratedColumn, Column} from \"typeorm\";\n\n@Entity()\nexport class User {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @Column()\n    age: number;\n\n    @Column()\n    phoneNumber: number;\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67ddb3618d7c8cf5eec03f1cadb02e07d5b1990f","contentHash":"d3b86e24021a353ec0167628c5774a46640641d93b32cbe27ef1ca3cc974e6f2"}}